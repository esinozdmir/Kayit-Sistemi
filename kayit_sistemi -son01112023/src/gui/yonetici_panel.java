/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package gui;

import javax.swing.JOptionPane;

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.ResultSetMetaData;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import java.util.Random;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author 90507
 */
public class yonetici_panel extends javax.swing.JFrame {

    /**
     * Creates new form yonetici_panel
     */
    public yonetici_panel() {
        initComponents();
        this.setLocationRelativeTo(null);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        ana_sayfa = new javax.swing.JButton();
        ogrenci_olustur_buton = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        ogretmen_bilgilerini_getir_table = new javax.swing.JTable();
        jScrollPane1 = new javax.swing.JScrollPane();
        ogrenci_bilgilerini_getir_table = new javax.swing.JTable();
        ogrenci_bilgilerini_getir_buton = new javax.swing.JButton();
        ogretmen_bilgilerini_getir_buton = new javax.swing.JButton();
        ogrenci_sil_buton = new javax.swing.JButton();
        ogretmen_sil_buton = new javax.swing.JButton();
        ogrenci_ekle_buton = new javax.swing.JButton();
        ogretmen_ekle_buton = new javax.swing.JButton();
        ogrencisatırsilbuton = new javax.swing.JButton();
        ogrencisatırsilbuton1 = new javax.swing.JButton();
        derstalepgecmisibuton = new javax.swing.JButton();
        ilgi_alani_sil_buton = new javax.swing.JButton();
        ilgi_alani_guncelle_buton = new javax.swing.JButton();
        ogrenci_ilgi_text = new javax.swing.JTextField();
        ogretmenilgi_alani_sil_buton1 = new javax.swing.JButton();
        ogretmenilgi_alani_guncelle_buton1 = new javax.swing.JButton();
        ogretmen_ilgi_text1 = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(204, 255, 204));
        jPanel1.setPreferredSize(new java.awt.Dimension(627, 435));

        ana_sayfa.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        ana_sayfa.setText("Ana Sayfa");
        ana_sayfa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ana_sayfaActionPerformed(evt);
            }
        });

        ogrenci_olustur_buton.setText("Ogrenci Olustur");
        ogrenci_olustur_buton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ogrenci_olustur_butonActionPerformed(evt);
            }
        });

        jButton1.setText("Ögrenci atama ekranına git");
        jButton1.setToolTipText("");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        ogretmen_bilgilerini_getir_table.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "OgretmenSicil", "OgretmenAdi", "OgretmenİlgiAlani", "OgretmenDersKodu"
            }
        ));
        jScrollPane2.setViewportView(ogretmen_bilgilerini_getir_table);

        ogrenci_bilgilerini_getir_table.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "OgrenciSicil", "OgrenciAdi", "OgrenciAgno", "DersKodu", "OgrenciİlgiAlani"
            }
        ));
        jScrollPane1.setViewportView(ogrenci_bilgilerini_getir_table);

        ogrenci_bilgilerini_getir_buton.setText("Ogrenci Ders Bilgilerini Getir");
        ogrenci_bilgilerini_getir_buton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ogrenci_bilgilerini_getir_butonActionPerformed(evt);
            }
        });

        ogretmen_bilgilerini_getir_buton.setText("Ogretmen Bilgilerini Getir");
        ogretmen_bilgilerini_getir_buton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ogretmen_bilgilerini_getir_butonActionPerformed(evt);
            }
        });

        ogrenci_sil_buton.setText("Ogrenci Sil");
        ogrenci_sil_buton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ogrenci_sil_butonActionPerformed(evt);
            }
        });

        ogretmen_sil_buton.setText("Ogretmen Sil");
        ogretmen_sil_buton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ogretmen_sil_butonActionPerformed(evt);
            }
        });

        ogrenci_ekle_buton.setText("Ogrenci Ekle");
        ogrenci_ekle_buton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ogrenci_ekle_butonActionPerformed(evt);
            }
        });

        ogretmen_ekle_buton.setText("Ogretmen Ekle");
        ogretmen_ekle_buton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ogretmen_ekle_butonActionPerformed(evt);
            }
        });

        ogrencisatırsilbuton.setText("Seçilen Ögrenci tablosundaki satırı sil");
        ogrencisatırsilbuton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ogrencisatırsilbutonActionPerformed(evt);
            }
        });

        ogrencisatırsilbuton1.setText("Seçilen Öğretmen tablosundaki satırı sil");
        ogrencisatırsilbuton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ogrencisatırsilbuton1ActionPerformed(evt);
            }
        });

        derstalepgecmisibuton.setText("Ders talep geçmişi");
        derstalepgecmisibuton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                derstalepgecmisibutonActionPerformed(evt);
            }
        });

        ilgi_alani_sil_buton.setText("İlgi Alani Sil");
        ilgi_alani_sil_buton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ilgi_alani_sil_butonActionPerformed(evt);
            }
        });

        ilgi_alani_guncelle_buton.setText("İlgi Alani Guncelle");
        ilgi_alani_guncelle_buton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ilgi_alani_guncelle_butonActionPerformed(evt);
            }
        });

        ogretmenilgi_alani_sil_buton1.setText("İlgi Alani Sil");
        ogretmenilgi_alani_sil_buton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ogretmenilgi_alani_sil_buton1ActionPerformed(evt);
            }
        });

        ogretmenilgi_alani_guncelle_buton1.setText("İlgi Alani Guncelle");
        ogretmenilgi_alani_guncelle_buton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ogretmenilgi_alani_guncelle_buton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(ogrenci_bilgilerini_getir_buton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(ogretmen_bilgilerini_getir_buton)
                        .addGap(357, 357, 357))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 77, Short.MAX_VALUE)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 503, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(20, 20, 20))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(ana_sayfa, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(ogrencisatırsilbuton)
                                        .addGap(266, 266, 266))
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(jPanel1Layout.createSequentialGroup()
                                            .addComponent(ogrenci_ilgi_text, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                            .addComponent(ilgi_alani_guncelle_buton)
                                            .addGap(18, 18, 18)
                                            .addComponent(ilgi_alani_sil_buton))
                                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                            .addComponent(ogrenci_ekle_buton)
                                            .addGap(18, 18, 18)
                                            .addComponent(ogrenci_sil_buton)
                                            .addGap(287, 287, 287))))
                                .addGap(56, 56, 56)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(ogrencisatırsilbuton1)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(ogretmen_ilgi_text1, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(ogretmenilgi_alani_guncelle_buton1)
                                        .addGap(18, 18, 18)
                                        .addComponent(ogretmenilgi_alani_sil_buton1))
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(ogretmen_ekle_buton)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(ogretmen_sil_buton, javax.swing.GroupLayout.PREFERRED_SIZE, 108, javax.swing.GroupLayout.PREFERRED_SIZE))))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(ogrenci_olustur_buton, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jButton1)
                                .addGap(18, 18, 18)
                                .addComponent(derstalepgecmisibuton, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addComponent(ana_sayfa)
                .addGap(11, 11, 11)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(ogrenci_olustur_buton)
                    .addComponent(derstalepgecmisibuton, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(ogrenci_bilgilerini_getir_buton)
                    .addComponent(ogretmen_bilgilerini_getir_buton))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 294, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(ogretmenilgi_alani_sil_buton1)
                        .addComponent(ogretmenilgi_alani_guncelle_buton1)
                        .addComponent(ogretmen_ilgi_text1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(ilgi_alani_sil_buton)
                        .addComponent(ogrenci_ilgi_text, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(ilgi_alani_guncelle_buton)))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(ogrenci_sil_buton)
                    .addComponent(ogretmen_sil_buton, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(ogrenci_ekle_buton)
                    .addComponent(ogretmen_ekle_buton))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(ogrencisatırsilbuton)
                    .addComponent(ogrencisatırsilbuton1))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 1082, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 546, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        this.setVisible(false);
        new yonetici_ogrenci_atama_ekrani().setVisible(true);
    }//GEN-LAST:event_jButton1ActionPerformed

    private void ogrenci_olustur_butonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ogrenci_olustur_butonActionPerformed
        List<Map<String, Object>> resultList = new ArrayList<>();
        try {
            Class.forName("org.postgresql.Driver");
            Connection connection = DriverManager.getConnection("jdbc:postgresql://localhost:5433/esin", "postgres", "12345");
            Boolean flag = false;
            Random randaom = new Random();
            int sicil_numo = randaom.nextInt(9000) + 1000;
            Random rnd = new Random();
            List<String> dersKoduList = List.of(
                    "AIT109",
                    "BLM101",
                    "BLM103",
                    "BLM105",
                    "FEF103",
                    "FEF105",
                    "FEF111",
                    "TDB107",
                    "YDB117",
                    "AIT110",
                    "BLM102",
                    "BLM104",
                    "BLM106",
                    "FEF112",
                    "FEF114",
                    "KYP118",
                    "TDB108",
                    "YDB116",
                    "BLM207",
                    "BLM209",
                    "BLM211",
                    "BLM213",
                    "FEF203",
                    "9501038",
                    "MAT205",
                    "MUH201",
                    "5201288",
                    "BLM206",
                    "BLM208",
                    "BLM210",
                    "BLM212",
                    "BLM216",
                    "ESD934",
                    "MUH202",
                    "9501018",
                    "MUH204",
                    "5201202",
                    "9903365",
                    "5201287",
                    "9501005",
                    "9901012");
            List<String> dersAdiList = List.of(
                    "Atatürk İlkeleri ve İnkilap Tarihi I",
                    "Bilgisayar Laboratuvarı I",
                    "Bilgisayar Mühendisliğine Giriş",
                    "Programlama I",
                    "Lineer Cebir",
                    "Matematik I",
                    "Fizik I",
                    "Türk Dili I",
                    "İngilizce I",
                    "Atatürk İlkeleri ve İnkilap Tarihi II",
                    "Bilgisayar Laboratuvarı II",
                    "Elektrik Devre Temelleri ve Uygulamaları",
                    "Programlama II",
                    "Fizik II",
                    "Matematik II",
                    "Kariyer Planlama",
                    "Türk Dili II",
                    "İngilizce II",
                    "Veri Yapıları ve Algoritmaları",
                    "Programlama Laboratuvarı - I",
                    "Mantıksal Tasarım ve Uygulamaları",
                    "Staj I",
                    "Diferansiyel Denklemler",
                    "Fizik I",
                    "Kesikli Matematik",
                    "Nesneye Yönelik Programlama",
                    "Bilgisayar Laboratuvari I",
                    "Bilgisayar Organizasyonu ve Mimarisi",
                    "Veritabanı Yönetimi",
                    "Programlama Laboratuvarı – II",
                    "Sistem Programlama",
                    "Programlama Dilleri Prensipleri",
                    "Gazeteciliğe Giriş",
                    "Olasılık ve Raslantı Değişkenleri",
                    "Lineer Cebir",
                    "Elektronik ve Uygulamaları",
                    "Programlama I",
                    "Ingilizce I",
                    "Bilgisayar Mühendisliğine Giris",
                    "Matematik I",
                    "Türk Dili I");
            List<Integer> dersKredi = List.of(
                    2,
                    3,
                    2,
                    3,
                    3,
                    6,
                    5,
                    2,
                    4,
                    2,
                    3,
                    5,
                    3,
                    5,
                    6,
                    0,
                    2,
                    4,
                    4,
                    3,
                    3,
                    6,
                    5,
                    5,
                    4,
                    5,
                    3,
                    4,
                    3,
                    3,
                    3,
                    3,
                    4,
                    5,
                    3,
                    5,
                    3,
                    4,
                    2,
                    6,
                    2);
            
            List<String> ilgi_alanıList = List.of("Atatürk İlkeleri ve İnkilap Tarihi I",
                    "Bilgisayar Laboratuvarı I",
                    "Bilgisayar Mühendisliğine Giriş",
                    "Programlama I",
                    "Lineer Cebir",
                    "Matematik I",
                    "Fizik I",
                    "Türk Dili I",
                    "İngilizce I",
                    "Atatürk İlkeleri ve İnkilap Tarihi II",
                    "Bilgisayar Laboratuvarı II",
                    "Elektrik Devre Temelleri ve Uygulamaları",
                    "Programlama II",
                    "Fizik II",
                    "Matematik II",
                    "Kariyer Planlama",
                    "Türk Dili II",
                    "İngilizce II",
                    "Veri Yapıları ve Algoritmaları",
                    "Programlama Laboratuvarı - I",
                    "Mantıksal Tasarım ve Uygulamaları",
                    "Staj I",
                    "Diferansiyel Denklemler",
                    "Fizik I",
                    "Kesikli Matematik",
                    "Nesneye Yönelik Programlama",
                    "Bilgisayar Laboratuvari I",
                    "Bilgisayar Organizasyonu ve Mimarisi",
                    "Veritabanı Yönetimi",
                    "Programlama Laboratuvarı – II",
                    "Sistem Programlama",
                    "Programlama Dilleri Prensipleri",
                    "Gazeteciliğe Giriş",
                    "Olasılık ve Raslantı Değişkenleri",
                    "Lineer Cebir",
                    "Elektronik ve Uygulamaları",
                    "Programlama I",
                    "Ingilizce I",
                    "Bilgisayar Mühendisliğine Giris",
                    "Matematik I",
                    "Türk Dili I");
            List<String> adListesi = List.of("Ali", "Veli", "Melis", "Kerem", "Hatice", "Selin", "Vatan", "Selman", "Yunus", "Emir", "Deniz", "Defne", "Burak", "Eren");
            
            List<String> soyadıListesi = List.of("Yılmaz", "Ersoy", "Aydın", "Demir", "Yasarlar", "Keskin", "Kose", "Kaya", "Çelik", "Yıldırım");
            
            for (int j = 0; j < dersKoduList.size(); j++) {
                
                String deleteSQL11 = "DELETE FROM ders WHERE ders_kodu = ? ";
                PreparedStatement preparedStatement11 = connection.prepareStatement(deleteSQL11);
                preparedStatement11.setString(1, dersKoduList.get(j));
                preparedStatement11.executeUpdate();
                
                String sql12 = "INSERT INTO ders ( ders_adi, ders_kredi, ders_kodu)VALUES (?, ?, ?);";
                PreparedStatement preparedStatement12 = connection.prepareStatement(sql12);
                preparedStatement12.setString(1, dersAdiList.get(j));
                preparedStatement12.setInt(2, dersKredi.get(j));
                preparedStatement12.setString(3, dersKoduList.get(j));
                preparedStatement12.executeUpdate();
                
                if (j < 20) {
                    String sorgu = "INSERT INTO ogretmen( ogretmen_adi, ogretmen_soyadi, ogretmen_ilgi_alanlari, ogretmen_sicil_no, ogretmen_sifresi, ogretmen_ders_kodu, ogretmen_kontenjan_bilgisi) VALUES (?, ?, ?, ?, ?, ?, ?)";
                    PreparedStatement preparedStatement74 = connection.prepareStatement(sorgu);
                    sicil_numo = randaom.nextInt(9000) + 1000;
                    String ado = adListesi.get(rnd.nextInt(adListesi.size()));
                    String soyado = soyadıListesi.get(rnd.nextInt(soyadıListesi.size()));
                    int sifreo = rnd.nextInt(9000) + 1000;
                    int kontenjan_bilgisi = rnd.nextInt(10) + 1;
                    preparedStatement74.setString(1, ado);
                    preparedStatement74.setString(2, soyado);
                    preparedStatement74.setString(3, ilgi_alanıList.get(j + 2));
                    preparedStatement74.setInt(4, sicil_numo);
                    preparedStatement74.setInt(5, sifreo);
                    preparedStatement74.setString(6, dersKoduList.get(j));
                    preparedStatement74.setInt(7, kontenjan_bilgisi);
                    preparedStatement74.executeUpdate();
                } else {
                    Random rand = new Random();
                    int ogretmesırası = rand.nextInt(19);
                    int sifre = 7484;
                    int counter = 0, ogretmen_sicil_no = 9665, ogretmen_kontenjan_bilgisi = 4;
                    String ogretmen_soyadi = "Erdil", ogretmen_adi = "Ali", ogretmen_ilgi_alanlari = "Bilgisayar Mühendisliğine Giris";
                    String sql2 = "select ogretmen_sicil_no,ogretmen_sifresi,ogretmen_kontenjan_bilgisi,ogretmen_adi,ogretmen_soyadi,ogretmen_ilgi_alanlari from ogretmen";
                    PreparedStatement preparedStatement211 = connection.prepareStatement(sql2);
                    ResultSet resultSet211 = preparedStatement211.executeQuery();
                    while (resultSet211.next()) {
                        counter++;
                        if (ogretmesırası == counter) {
                            ogretmen_sicil_no = Integer.parseInt(resultSet211.getString("ogretmen_sicil_no"));
                            sifre = resultSet211.getInt("ogretmen_sifresi");
                            ogretmen_kontenjan_bilgisi = resultSet211.getInt("ogretmen_kontenjan_bilgisi");
                            ogretmen_soyadi = resultSet211.getString("ogretmen_soyadi");
                            ogretmen_adi = resultSet211.getString("ogretmen_adi");
                            ogretmen_ilgi_alanlari = resultSet211.getString("ogretmen_ilgi_alanlari");
                            
                        }
                        
                    }
                    String sorgu = "INSERT INTO ogretmen( ogretmen_adi, ogretmen_soyadi, ogretmen_ilgi_alanlari, ogretmen_sicil_no, ogretmen_sifresi, ogretmen_ders_kodu, ogretmen_kontenjan_bilgisi) VALUES (?, ?, ?, ?, ?, ?, ?)";
                    PreparedStatement preparedStatement74 = connection.prepareStatement(sorgu);
                    
                    String ado = adListesi.get(rnd.nextInt(adListesi.size()));
                    String soyado = soyadıListesi.get(rnd.nextInt(soyadıListesi.size()));
                    int kontenjan_bilgisi = rnd.nextInt(10) + 1;
                    preparedStatement74.setString(1, ogretmen_adi);
                    preparedStatement74.setString(2, ogretmen_soyadi);
                    preparedStatement74.setString(3, ogretmen_ilgi_alanlari);
                    preparedStatement74.setInt(4, ogretmen_sicil_no);
                    preparedStatement74.setInt(5, sifre);
                    preparedStatement74.setString(6, dersKoduList.get(j));
                    preparedStatement74.setInt(7, ogretmen_kontenjan_bilgisi);
                    preparedStatement74.executeUpdate();
                }
                
            }
            
            for (int i = 0; i < 48; i++) {
                
                List<String> stringListesiDersNotu = List.of("AA", "BA", "BB", "CB", "CC", "DC", "DD", "FF");
                int yeri = rnd.nextInt(dersKoduList.size());
                int yeri2 = rnd.nextInt(dersKoduList.size());
                while (yeri == yeri2) {
                    yeri2 = rnd.nextInt(dersKoduList.size());
                    
                }
                String ders_kodu = dersKoduList.get(yeri);
                String ders_adı = dersAdiList.get(yeri);
                int ders_kredi = dersKredi.get(yeri);
                String ilgi_alanı = dersAdiList.get(yeri2);
                int sicil_num = rnd.nextInt(9000) + 1000;
                String ad = adListesi.get(rnd.nextInt(adListesi.size()));
                String soyad = soyadıListesi.get(rnd.nextInt(soyadıListesi.size()));
                String dersNotu = stringListesiDersNotu.get(rnd.nextInt(stringListesiDersNotu.size()));
                int sifre = rnd.nextInt(9000) + 1000;
                String dersbasarıdurumu = null;
                double agno = rnd.nextDouble() * 4; // 0 ile 4 arasında rastgele bir ondalıklı sayı oluşturur
                agno = Math.round(agno * 100.0) / 100.0; // Virgülden sonra sadece iki basamak kalacak şekilde yuvarlama işlemi
                // H ise Hocanın onayında , B ise Basarılı , A ise atanmadı yada onaylanmadı, O ise ogrencinin onayında
                List<String> anlasmaDurumu = List.of("H", "B", "A", "O");
                String anlaşmaDurumu = anlasmaDurumu.get(1);
                if (dersNotu.equals("FF")) {
                    dersbasarıdurumu = "Basarısız";
                } else {
                    dersbasarıdurumu = "Başarılı";
                }
                String anlasma_sicil_no = "";
                int anlasma_talep_sayisi = 0;
                String deleteOgrSQL = "DELETE FROM ogrenci WHERE ogrenci_sicil_num = ? and ogrenci_ders_kodu =?";
                PreparedStatement preparedStatement3 = connection.prepareStatement(deleteOgrSQL);
                preparedStatement3.setInt(1, sicil_num);
                preparedStatement3.setString(2, ders_kodu);
                preparedStatement3.executeUpdate();
                
                int ogretmen_sicil_no = 0;
                String sql2 = "select ogretmen_sicil_no from ogretmen where ogretmen_ders_kodu = ? ";
                PreparedStatement preparedStatement211 = connection.prepareStatement(sql2);
                preparedStatement211.setString(1, ders_kodu);
                ResultSet resultSet211 = preparedStatement211.executeQuery();
                while (resultSet211.next()) {
                    
                    ogretmen_sicil_no = resultSet211.getInt("ogretmen_sicil_no");
                    
                }
                
                String sql = "INSERT INTO ogrenci(ogrenci_sifresi, ogrenci_soyadi, ogrenci_adi, ogrenci_ders_basari_notu, ogrenci_ders_basari_durumu, ogrenci_anlasma_durumu, ogrenci_anlasma_talep_sayisi, ogrenci_ilgi_alani, ogrenci_agno, ogrenci_ders_kodu, ogrenci_sicil_num ,ogrenci_ogretmen_sicil_num)VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)";
                PreparedStatement preparedStatement = connection.prepareStatement(sql);
                preparedStatement.setInt(1, sifre);
                preparedStatement.setString(2, soyad);
                preparedStatement.setString(3, ad);
                preparedStatement.setString(4, dersNotu);
                preparedStatement.setString(5, dersbasarıdurumu);
                preparedStatement.setString(6, anlaşmaDurumu);
                preparedStatement.setInt(7, anlasma_talep_sayisi);
                preparedStatement.setString(8, ilgi_alanı);
                preparedStatement.setDouble(9, agno);
                preparedStatement.setString(10, ders_kodu);
                preparedStatement.setInt(11, sicil_num);
                preparedStatement.setInt(12, ogretmen_sicil_no);
                preparedStatement.executeUpdate();
                
            }
            for (int j = 0; j < 10; j++) {
                Boolean flag3 = false;
                int yeri = rnd.nextInt(dersKoduList.size());
                String ders_kodu = dersKoduList.get(yeri);
                int sifre = rnd.nextInt(9000) + 1000;
                int sicil_num = rnd.nextInt(9000) + 1000;
                String ogrenci_sicil_numkontrol = "";
                String sql3 = "select ogrenci_sicil_num from  ogrenci ";
                PreparedStatement preparedStatement3 = connection.prepareStatement(sql3);
                ResultSet resultSet3 = preparedStatement3.executeQuery();
                while (resultSet3.next()) {
                    ogrenci_sicil_numkontrol = resultSet3.getString("ogrenci_sicil_num");
                    if (sicil_num != Integer.parseInt(ogrenci_sicil_numkontrol)) {
                        //yaratılan sicil daha once ogrenci tablosunda olmayan bir sicil  başarılı
                        flag3 = true;
                        break;
                    }
                }
                if (!flag3) {
                    //yeniden üret ve kontrol et
                    sicil_num = rnd.nextInt(9000) + 1000;
                    String sql2 = "select ogrenci_sicil_num from  ogrenci ";
                    PreparedStatement preparedStatement2 = connection.prepareStatement(sql2);
                    ResultSet resultSet2 = preparedStatement2.executeQuery();
                    while (resultSet2.next()) {
                        ogrenci_sicil_numkontrol = resultSet2.getString("ogrenci_sicil_num");
                        if (sicil_num != Integer.parseInt(ogrenci_sicil_numkontrol)) {
                            flag3 = true;
                            break;
                        }
                    }
                }
                
                String ad = adListesi.get(rnd.nextInt(adListesi.size()));
                String soyad = soyadıListesi.get(rnd.nextInt(soyadıListesi.size()));
                
                List<String> anlasmaDurumuList = List.of("H", "B", "A");
                
                int yeri2 = rnd.nextInt(ilgi_alanıList.size());
                String ilgi_alanı = ilgi_alanıList.get(yeri2);
                String sql = "INSERT INTO ogrenci(ogrenci_sifresi, ogrenci_soyadi, ogrenci_adi,  ogrenci_anlasma_durumu, ogrenci_anlasma_talep_sayisi, ogrenci_ilgi_alani, ogrenci_agno,  ogrenci_sicil_num ,ogrenci_ders_kodu)VALUES (?, ?, ?, ?, ?, ?, ?, ?, ? )";
                double agno = rnd.nextDouble() * 4; // 0 ile 4 arasında rastgele bir ondalıklı sayı oluşturur
                agno = Math.round(agno * 100.0) / 100.0; // Virgülden sonra sadece iki basamak kalacak şekilde yuvarlama işlemi
                PreparedStatement preparedStatement = connection.prepareStatement(sql);
                preparedStatement.setInt(1, sifre);
                preparedStatement.setString(2, soyad);
                preparedStatement.setString(3, ad);
                preparedStatement.setString(4, anlasmaDurumuList.get(2));
                preparedStatement.setInt(5, 0);
                preparedStatement.setString(6, ilgi_alanı);
                preparedStatement.setDouble(7, agno);
                preparedStatement.setInt(8, sicil_num);
                preparedStatement.setString(9, ders_kodu);
                preparedStatement.executeUpdate();
            }
            JOptionPane.showMessageDialog(null, "Ögrenci oluştu!", "Bilgi", JOptionPane.INFORMATION_MESSAGE);
            
            connection.close();
        } catch (ClassNotFoundException | SQLException e) {
            System.out.println("Veritabanı hatası: " + e.getMessage());
        }

    }//GEN-LAST:event_ogrenci_olustur_butonActionPerformed

    private void ana_sayfaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ana_sayfaActionPerformed
        String message = "Ana sayfaya yonlendiriliyorsunuz.";
        JOptionPane.showMessageDialog(null, message, "Bilgi Mesajı", JOptionPane.INFORMATION_MESSAGE);
        
        this.setVisible(false);
        new kullanici_secim_ekrani().setVisible(true);
    }//GEN-LAST:event_ana_sayfaActionPerformed

    private void ogrenci_bilgilerini_getir_butonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ogrenci_bilgilerini_getir_butonActionPerformed
        
        try {
            Class.forName("org.postgresql.Driver");

            // Veritabanına bağlanma
            Connection connection = DriverManager.getConnection("jdbc:postgresql://localhost:5433/esin", "postgres", "12345");

            // Veritabanına ekleme işlemi
            String sql = "select ogrenci.ogrenci_sicil_num as OgrSicil, ogrenci.ogrenci_adi as OgrAdi,ogrenci.ogrenci_agno as OgrAgno,ogrenci_ders_kodu as OgrDrsKodu ,ogrenci.ogrenci_ilgi_alani as OgrİlgiAlani "
                    + "from ogrenci order by ogrenci.ogrenci_sicil_num asc";
            PreparedStatement preparedStatement = connection.prepareStatement(sql);
            //preparedStatement.setInt(1, Integer.parseInt(kullaniciSicili));
            ResultSet resultSet = preparedStatement.executeQuery();
            
            ResultSetMetaData rowdata = (ResultSetMetaData) resultSet.getMetaData();
            int j = 0;
            int i = 0;
            int say = 1;
            int col = rowdata.getColumnCount();
            int k = rowdata.getColumnCount();
            String[] kolon = new String[k];
            for (j = 0; j < k; j++) {
                kolon[j] = rowdata.getColumnName(j + 1);
            }
            ogrenci_bilgilerini_getir_table.setModel(new javax.swing.table.DefaultTableModel(new Object[][]{}, new String[]{}));
            DefaultTableModel model = (DefaultTableModel) ogrenci_bilgilerini_getir_table.getModel();
            model.setColumnIdentifiers(kolon);
            while (resultSet.next()) {
                Object[] o = new Object[k];
                for (j = 0; j < k; j++) {
                    o[j] = resultSet.getObject(j + 1);
                }
                model.addRow(o);
                ogrenci_bilgilerini_getir_table.setModel(model);
            }
            connection.close();
        } catch (ClassNotFoundException | SQLException e) {
            System.out.println("Veritabanı hatası: " + e.getMessage());
        }

    }//GEN-LAST:event_ogrenci_bilgilerini_getir_butonActionPerformed

    private void ogretmen_bilgilerini_getir_butonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ogretmen_bilgilerini_getir_butonActionPerformed
        try {
            Class.forName("org.postgresql.Driver");

            // Veritabanına bağlanma
            Connection connection = DriverManager.getConnection("jdbc:postgresql://localhost:5433/esin", "postgres", "12345");

            // Veritabanına ekleme işlemi
            String sql = "select ogretmen.ogretmen_sicil_no as OgretmenSicil, ogretmen.ogretmen_adi as OgrtmenAdi,ogretmen.ogretmen_ilgi_alanlari as OgrtİlgiAlani,ogretmen.ogretmen_ders_kodu as OgrtmenDrsKodu  "
                    + "from ogretmen  order by ogretmen.ogretmen_sicil_no asc";
            PreparedStatement preparedStatement = connection.prepareStatement(sql);
            //preparedStatement.setInt(1, Integer.parseInt(kullaniciSicili));
            ResultSet resultSet = preparedStatement.executeQuery();
            
            ResultSetMetaData rowdata = (ResultSetMetaData) resultSet.getMetaData();
            int j = 0;
            int i = 0;
            int say = 1;
            int col = rowdata.getColumnCount();
            int k = rowdata.getColumnCount();
            String[] kolon = new String[k];
            for (j = 0; j < k; j++) {
                kolon[j] = rowdata.getColumnName(j + 1);
            }
            ogretmen_bilgilerini_getir_table.setModel(new javax.swing.table.DefaultTableModel(new Object[][]{}, new String[]{}));
            DefaultTableModel model = (DefaultTableModel) ogretmen_bilgilerini_getir_table.getModel();
            model.setColumnIdentifiers(kolon);
            while (resultSet.next()) {
                Object[] o = new Object[k];
                for (j = 0; j < k; j++) {
                    o[j] = resultSet.getObject(j + 1);
                }
                model.addRow(o);
                ogretmen_bilgilerini_getir_table.setModel(model);
            }
            connection.close();
        } catch (ClassNotFoundException | SQLException e) {
            System.out.println("Veritabanı hatası: " + e.getMessage());
        }
    }//GEN-LAST:event_ogretmen_bilgilerini_getir_butonActionPerformed

    private void ogrenci_sil_butonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ogrenci_sil_butonActionPerformed
        
        String jdbcUrl = "jdbc:postgresql://localhost:5433/esin";
        String kullaniciAdi = "postgres";
        String parola = "12345";

        // Veritabanı bağlantısını aç
        try ( Connection connection = DriverManager.getConnection(jdbcUrl, kullaniciAdi, parola)) {
            String deleteSQL2 = "DELETE FROM ogrenci WHERE ogrenci_sicil_num = ?";
            
            try ( PreparedStatement preparedStatement = connection.prepareStatement(deleteSQL2)) {
                
                int selectedRow = ogrenci_bilgilerini_getir_table.getSelectedRow();
                String ogrenci = "";
                
                if (selectedRow != -1) {
                    // Seçilen satırdan öğrenci sicil numarasını al
                    Object ogrenciObject = ogrenci_bilgilerini_getir_table.getValueAt(selectedRow, 0);
                    ogrenci = ogrenciObject != null ? ogrenciObject.toString() : "";
                    int ogrenciNumarasi = Integer.parseInt(ogrenciObject.toString());
                    
                    preparedStatement.setInt(1, ogrenciNumarasi);
                    //preparedStatement.setInt(2, Integer.parseInt(sicilNumarasi));
                    int affectedRows = preparedStatement.executeUpdate();
                    if (affectedRows > 0) {
                        JOptionPane.showMessageDialog(this, "Ogrenci silindi", "BİLGİ", JOptionPane.INFORMATION_MESSAGE);
                        
                    } else {
                        System.out.println("Silinecek veri bulunamadı.");
                    }
                    
                } else {
                    JOptionPane.showMessageDialog(this, "Lütfen bir öğrenci seçin.", "Hata", JOptionPane.ERROR_MESSAGE);
                }
                
            } catch (SQLException e) {
                e.printStackTrace();
                System.out.println("Veritabanı hatası: " + e.getMessage());
            }
        } catch (Exception e) {
            e.printStackTrace();
            System.out.println("Veritabanı hatası: " + e.getMessage());
        }
        
        this.setVisible(false);
        new yonetici_panel().setVisible(true);
    }//GEN-LAST:event_ogrenci_sil_butonActionPerformed

    private void ogretmen_sil_butonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ogretmen_sil_butonActionPerformed
        
        String jdbcUrl = "jdbc:postgresql://localhost:5433/esin";
        String kullaniciAdi = "postgres";
        String parola = "12345";

        // Veritabanı bağlantısını aç
        try ( Connection connection = DriverManager.getConnection(jdbcUrl, kullaniciAdi, parola)) {
            String deleteSQL2 = "DELETE FROM ogretmen WHERE ogretmen_sicil_no = ?";
            
            try ( PreparedStatement preparedStatement = connection.prepareStatement(deleteSQL2)) {
                
                int selectedRow = ogretmen_bilgilerini_getir_table.getSelectedRow();
                String ogrenci = "";
                
                if (selectedRow != -1) {
                    // Seçilen satırdan öğrenci sicil numarasını al
                    Object ogrenciObject = ogretmen_bilgilerini_getir_table.getValueAt(selectedRow, 0);
                    ogrenci = ogrenciObject != null ? ogrenciObject.toString() : "";
                    int ogrenciNumarasi = Integer.parseInt(ogrenciObject.toString());
                    
                    preparedStatement.setInt(1, ogrenciNumarasi);
                    //preparedStatement.setInt(2, Integer.parseInt(sicilNumarasi));
                    int affectedRows = preparedStatement.executeUpdate();
                    if (affectedRows > 0) {
                        JOptionPane.showMessageDialog(this, "Ogretmen silindi", "BİLGİ", JOptionPane.INFORMATION_MESSAGE);
                        
                    } else {
                        System.out.println("Silinecek veri bulunamadı.");
                    }
                    
                } else {
                    JOptionPane.showMessageDialog(this, "Lütfen bir öğretmen seçin.", "HATA", JOptionPane.ERROR_MESSAGE);
                }
                
            } catch (SQLException e) {
                e.printStackTrace();
                System.out.println("Veritabanı hatası: " + e.getMessage());
            }
        } catch (Exception e) {
            e.printStackTrace();
            System.out.println("Veritabanı hatası: " + e.getMessage());
        }
        this.setVisible(false);
        new yonetici_panel().setVisible(true);

    }//GEN-LAST:event_ogretmen_sil_butonActionPerformed

    private void ogrenci_ekle_butonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ogrenci_ekle_butonActionPerformed
        
        this.setVisible(false);
        new yonetici_ogrenci_ekleme_ekrani().setVisible(true);

    }//GEN-LAST:event_ogrenci_ekle_butonActionPerformed

    private void ogretmen_ekle_butonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ogretmen_ekle_butonActionPerformed
        
        this.setVisible(false);
        new yonetici_ogretmen_ekleme_ekrani().setVisible(true);
    }//GEN-LAST:event_ogretmen_ekle_butonActionPerformed

    private void ogrencisatırsilbutonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ogrencisatırsilbutonActionPerformed
        // TODO add your handling code here:

        String jdbcUrl = "jdbc:postgresql://localhost:5433/esin";
        String kullaniciAdi = "postgres";
        String parola = "12345";

        // Veritabanı bağlantısını aç
        try ( Connection connection = DriverManager.getConnection(jdbcUrl, kullaniciAdi, parola)) {
            String deleteSQL2 = "DELETE FROM ogrenci WHERE ogrenci_sicil_num = ? and ogrenci_ders_kodu = ?";
            
            try ( PreparedStatement preparedStatement = connection.prepareStatement(deleteSQL2)) {
                
                int selectedRow = ogrenci_bilgilerini_getir_table.getSelectedRow();
                String ogrenci = "", dersKodu = "";
                
                if (selectedRow != -1) {
                    // Seçilen satırdan öğrenci sicil numarasını al
                    Object ogrenciObject = ogrenci_bilgilerini_getir_table.getValueAt(selectedRow, 0);
                    ogrenci = ogrenciObject != null ? ogrenciObject.toString() : "";
                    Object dersKoduObject = ogrenci_bilgilerini_getir_table.getValueAt(selectedRow, 3);
                    dersKodu = dersKoduObject != null ? dersKoduObject.toString() : "";
                    int ogrenciNumarasi = Integer.parseInt(ogrenciObject.toString());
                    
                    preparedStatement.setInt(1, ogrenciNumarasi);
                    preparedStatement.setString(2, dersKodu);
                    int affectedRows = preparedStatement.executeUpdate();
                    if (affectedRows > 0) {
                        JOptionPane.showMessageDialog(this, "İlgili satırdaki öğrenci silindi", "BİLGİ", JOptionPane.INFORMATION_MESSAGE);
                        
                    } else {
                        System.out.println("Silinecek veri bulunamadı.");
                    }
                    
                } else {
                    JOptionPane.showMessageDialog(this, "Lütfen bir öğrenci seçin.", "Hata", JOptionPane.ERROR_MESSAGE);
                }
                
            } catch (SQLException e) {
                e.printStackTrace();
                System.out.println("Veritabanı hatası: " + e.getMessage());
            }
        } catch (Exception e) {
            e.printStackTrace();
            System.out.println("Veritabanı hatası: " + e.getMessage());
        }
        
        this.setVisible(false);
        new yonetici_panel().setVisible(true);
    }//GEN-LAST:event_ogrencisatırsilbutonActionPerformed

    private void ogrencisatırsilbuton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ogrencisatırsilbuton1ActionPerformed
        // TODO add your handling code here:

        String jdbcUrl = "jdbc:postgresql://localhost:5433/esin";
        String kullaniciAdi = "postgres";
        String parola = "12345";

        // Veritabanı bağlantısını aç
        try ( Connection connection = DriverManager.getConnection(jdbcUrl, kullaniciAdi, parola)) {
            String deleteSQL2 = "DELETE FROM ogretmen WHERE ogretmen_sicil_no = ? and ogretmen_ders_kodu = ?";
            
            try ( PreparedStatement preparedStatement = connection.prepareStatement(deleteSQL2)) {
                
                int selectedRow = ogretmen_bilgilerini_getir_table.getSelectedRow();
                String ogrenci = "", dersKodu = "";
                
                if (selectedRow != -1) {
                    // Seçilen satırdan öğrenci sicil numarasını al
                    Object ogrenciObject = ogretmen_bilgilerini_getir_table.getValueAt(selectedRow, 0);
                    ogrenci = ogrenciObject != null ? ogrenciObject.toString() : "";
                    int ogrenciNumarasi = Integer.parseInt(ogrenciObject.toString());
                    Object dersKoduObject = ogretmen_bilgilerini_getir_table.getValueAt(selectedRow, 3);
                    dersKodu = dersKoduObject != null ? dersKoduObject.toString() : "";
                    
                    preparedStatement.setInt(1, ogrenciNumarasi);
                    preparedStatement.setString(2, dersKodu);
                    int affectedRows = preparedStatement.executeUpdate();
                    if (affectedRows > 0) {
                        JOptionPane.showMessageDialog(this, "İlgili satırdaki öğretmen silindi", "BİLGİ", JOptionPane.INFORMATION_MESSAGE);
                        
                    } else {
                        System.out.println("Silinecek veri bulunamadı.");
                    }
                    
                } else {
                    JOptionPane.showMessageDialog(this, "Lütfen bir öğrenci seçin.", "Hata", JOptionPane.ERROR_MESSAGE);
                }
                
            } catch (SQLException e) {
                e.printStackTrace();
                System.out.println("Veritabanı hatası: " + e.getMessage());
            }
        } catch (Exception e) {
            e.printStackTrace();
            System.out.println("Veritabanı hatası: " + e.getMessage());
        }
        this.setVisible(false);
        new yonetici_panel().setVisible(true);

    }//GEN-LAST:event_ogrencisatırsilbuton1ActionPerformed

    private void derstalepgecmisibutonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_derstalepgecmisibutonActionPerformed
        // TODO add your handling code here:
        this.setVisible(false);
        new ders_talep_gecmisi_ekran().setVisible(true);
    }//GEN-LAST:event_derstalepgecmisibutonActionPerformed

    private void ilgi_alani_sil_butonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ilgi_alani_sil_butonActionPerformed
        
        String jdbcUrl = "jdbc:postgresql://localhost:5433/esin";
        String kullaniciAdi = "postgres";
        String parola = "12345";

        // Veritabanı bağlantısını aç
        try ( Connection connection = DriverManager.getConnection(jdbcUrl, kullaniciAdi, parola)) {
            String deleteSQL2 = "UPDATE ogrenci SET ogrenci_ilgi_alani = NULL WHERE ogrenci_sicil_num = ?";
            
            try ( PreparedStatement preparedStatement = connection.prepareStatement(deleteSQL2)) {
                
                int selectedRow = ogrenci_bilgilerini_getir_table.getSelectedRow();
                String sicili = "";
                
                if (selectedRow != -1) {
                    // Seçilen satırdan öğrenci sicil numarasını al

                    Object siciliObject = ogrenci_bilgilerini_getir_table.getValueAt(selectedRow, 0);
                    sicili = siciliObject != null ? siciliObject.toString() : "";
                    preparedStatement.setInt(1, Integer.parseInt(sicili));
                    int affectedRows = preparedStatement.executeUpdate();
                    if (affectedRows > 0) {
                        JOptionPane.showMessageDialog(this, "İlgi alanı silindi", "BİLGİ", JOptionPane.ERROR_MESSAGE);
                        
                    } else {
                        System.out.println("Silinecek veri bulunamadı.");
                    }
                    
                } else {
                    JOptionPane.showMessageDialog(this, "Lütfen bir öğrenci seçin.", "Hata", JOptionPane.ERROR_MESSAGE);
                }
                
            } catch (SQLException e) {
                e.printStackTrace();
                System.out.println("Veritabanı hatası: " + e.getMessage());
            }
        } catch (Exception e) {
            e.printStackTrace();
            System.out.println("Veritabanı hatası: " + e.getMessage());
        }
        this.setVisible(false);
        new yonetici_panel().setVisible(true);
        

    }//GEN-LAST:event_ilgi_alani_sil_butonActionPerformed

    private void ilgi_alani_guncelle_butonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ilgi_alani_guncelle_butonActionPerformed
        // TODO add your handling code here:

        String jdbcUrl = "jdbc:postgresql://localhost:5433/esin";
        String kullaniciAdi = "postgres";
        String parola = "12345";

        // Veritabanı bağlantısını aç
        try ( Connection connection = DriverManager.getConnection(jdbcUrl, kullaniciAdi, parola)) {
            String deleteSQL2 = "UPDATE ogrenci SET ogrenci_ilgi_alani = ? where ogrenci_sicil_num = ?";
            
            try ( PreparedStatement preparedStatement = connection.prepareStatement(deleteSQL2)) {
                
                int selectedRow = ogrenci_bilgilerini_getir_table.getSelectedRow();
                String sicili = "";
                
                if (selectedRow != -1) {
                    // Seçilen satırdan öğrenci sicil numarasını al
                    String ilgiAlani = ogrenci_ilgi_text.getText();
                    if (ilgiAlani != null && !ilgiAlani.trim().isEmpty()) {
                        Object siciliObject = ogrenci_bilgilerini_getir_table.getValueAt(selectedRow, 0);
                        sicili = siciliObject != null ? siciliObject.toString() : "";
                        
                        preparedStatement.setString(1, ogrenci_ilgi_text.getText());
                        preparedStatement.setInt(2, Integer.parseInt(sicili));
                        int affectedRows = preparedStatement.executeUpdate();
                        if (affectedRows > 0) {
                            JOptionPane.showMessageDialog(this, "İlgi alanı degiştirildi", "BİLGİ", JOptionPane.ERROR_MESSAGE);
                            
                        } else {
                            System.out.println("Silinecek veri bulunamadı.");
                        }
                    } else {
                        JOptionPane.showMessageDialog(this, "İlgi alanını güncellemek için istediginiz degeri yazın", "Hata", JOptionPane.ERROR_MESSAGE);
                        
                    }
                    
                } else {
                    JOptionPane.showMessageDialog(this, "Lütfen bir öğrenci seçin.", "Hata", JOptionPane.ERROR_MESSAGE);
                }
                
            } catch (SQLException e) {
                e.printStackTrace();
                System.out.println("Veritabanı hatası: " + e.getMessage());
            }
        } catch (Exception e) {
            e.printStackTrace();
            System.out.println("Veritabanı hatası: " + e.getMessage());
        }
        this.setVisible(false);
        new yonetici_panel().setVisible(true);
        

    }//GEN-LAST:event_ilgi_alani_guncelle_butonActionPerformed

    private void ogretmenilgi_alani_sil_buton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ogretmenilgi_alani_sil_buton1ActionPerformed
        // TODO add your handling code here:
        String jdbcUrl = "jdbc:postgresql://localhost:5433/esin";
        String kullaniciAdi = "postgres";
        String parola = "12345";

        // Veritabanı bağlantısını aç
        try ( Connection connection = DriverManager.getConnection(jdbcUrl, kullaniciAdi, parola)) {
            String deleteSQL2 = "UPDATE ogretmen SET ogretmen_ilgi_alanlari = NULL WHERE ogretmen_sicil_no = ?";
            try ( PreparedStatement preparedStatement = connection.prepareStatement(deleteSQL2)) {
                
                int selectedRow = ogretmen_bilgilerini_getir_table.getSelectedRow();
                String sicili = "";
                
                if (selectedRow != -1) {
                    // Seçilen satırdan öğrenci sicil numarasını al

                    Object siciliObject = ogretmen_bilgilerini_getir_table.getValueAt(selectedRow, 0);
                    sicili = siciliObject != null ? siciliObject.toString() : "";
                    preparedStatement.setInt(1, Integer.parseInt(sicili));
                    int affectedRows = preparedStatement.executeUpdate();
                    if (affectedRows > 0) {
                        JOptionPane.showMessageDialog(this, "İlgi alanı silindi", "BİLGİ", JOptionPane.ERROR_MESSAGE);
                        
                    } else {
                        System.out.println("Silinecek veri bulunamadı.");
                    }
                    
                } else {
                    JOptionPane.showMessageDialog(this, "Lütfen bir öğrenci seçin.", "Hata", JOptionPane.ERROR_MESSAGE);
                }
                
            } catch (SQLException e) {
                e.printStackTrace();
                System.out.println("Veritabanı hatası: " + e.getMessage());
            }
        } catch (Exception e) {
            e.printStackTrace();
            System.out.println("Veritabanı hatası: " + e.getMessage());
        }
        this.setVisible(false);
        new yonetici_panel().setVisible(true);
        

    }//GEN-LAST:event_ogretmenilgi_alani_sil_buton1ActionPerformed

    private void ogretmenilgi_alani_guncelle_buton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ogretmenilgi_alani_guncelle_buton1ActionPerformed
        // TODO add your handling code here:

        String jdbcUrl = "jdbc:postgresql://localhost:5433/esin";
        String kullaniciAdi = "postgres";
        String parola = "12345";

        // Veritabanı bağlantısını aç
        try ( Connection connection = DriverManager.getConnection(jdbcUrl, kullaniciAdi, parola)) {
            String deleteSQL2 = "UPDATE ogretmen SET ogretmen_ilgi_alanlari = ? where ogretmen_sicil_no = ?";
            
            try ( PreparedStatement preparedStatement = connection.prepareStatement(deleteSQL2)) {
                
                int selectedRow = ogretmen_bilgilerini_getir_table.getSelectedRow();
                String sicili = "";
                
                if (selectedRow != -1) {
                    // Seçilen satırdan öğrenci sicil numarasını al
                    String ilgiAlani = ogretmen_ilgi_text1.getText();
                    if (ilgiAlani != null && !ilgiAlani.trim().isEmpty()) {
                        Object siciliObject = ogretmen_bilgilerini_getir_table.getValueAt(selectedRow, 0);
                        sicili = siciliObject != null ? siciliObject.toString() : "";
                        
                        preparedStatement.setString(1, ogretmen_ilgi_text1.getText());
                        preparedStatement.setInt(2, Integer.parseInt(sicili));
                        int affectedRows = preparedStatement.executeUpdate();
                        if (affectedRows > 0) {
                            JOptionPane.showMessageDialog(this, "İlgi alanı degiştirildi", "BİLGİ", JOptionPane.ERROR_MESSAGE);
                            
                        } else {
                            System.out.println("Silinecek veri bulunamadı.");
                        }
                    } else {
                        JOptionPane.showMessageDialog(this, "İlgi alanını güncellemek için istediginiz degeri yazın", "Hata", JOptionPane.ERROR_MESSAGE);
                        
                    }
                    
                } else {
                    JOptionPane.showMessageDialog(this, "Lütfen bir öğrenci seçin.", "Hata", JOptionPane.ERROR_MESSAGE);
                }
                
            } catch (SQLException e) {
                e.printStackTrace();
                System.out.println("Veritabanı hatası: " + e.getMessage());
            }
        } catch (Exception e) {
            e.printStackTrace();
            System.out.println("Veritabanı hatası: " + e.getMessage());
        }
        this.setVisible(false);
        new yonetici_panel().setVisible(true);
        

    }//GEN-LAST:event_ogretmenilgi_alani_guncelle_buton1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(yonetici_panel.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(yonetici_panel.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(yonetici_panel.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(yonetici_panel.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new yonetici_panel().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton ana_sayfa;
    private javax.swing.JButton derstalepgecmisibuton;
    private javax.swing.JButton ilgi_alani_guncelle_buton;
    private javax.swing.JButton ilgi_alani_sil_buton;
    private javax.swing.JButton jButton1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JButton ogrenci_bilgilerini_getir_buton;
    private javax.swing.JTable ogrenci_bilgilerini_getir_table;
    private javax.swing.JButton ogrenci_ekle_buton;
    private javax.swing.JTextField ogrenci_ilgi_text;
    private javax.swing.JButton ogrenci_olustur_buton;
    private javax.swing.JButton ogrenci_sil_buton;
    private javax.swing.JButton ogrencisatırsilbuton;
    private javax.swing.JButton ogrencisatırsilbuton1;
    private javax.swing.JButton ogretmen_bilgilerini_getir_buton;
    private javax.swing.JTable ogretmen_bilgilerini_getir_table;
    private javax.swing.JButton ogretmen_ekle_buton;
    private javax.swing.JTextField ogretmen_ilgi_text1;
    private javax.swing.JButton ogretmen_sil_buton;
    private javax.swing.JButton ogretmenilgi_alani_guncelle_buton1;
    private javax.swing.JButton ogretmenilgi_alani_sil_buton1;
    // End of variables declaration//GEN-END:variables
}
