/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package gui;

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.ResultSetMetaData;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.Collections;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import java.util.Set;

import javax.swing.JComboBox;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author 90507
 */
public class ogretmen_formul_ekrani extends javax.swing.JFrame {

    /**
     * Creates new form ogretmen_formul_ekrani
     */
    private static String kullaniciSicili;
    private HashMap<String, String> hashMap = new HashMap<>();
    private HashMap<String, Double> hashMapOgrenciPuanları = new HashMap<>();

    private static final double AANotu = 4;
    private static final double BANotu = 4;
    private static final double BBNotu = 4;
    private static final double CBNotu = 4;
    private static final double CCNotu = 4;
    private static final double DCNotu = 4;
    private static final double DDNotu = 4;
    private static final double FFNotu = 4;

    private static int yonetici_ogrenci_talep_sayisi;

    public ogretmen_formul_ekrani(String kullaniciSicili, int yonetici_ogrenci_talep_sayisi) {
        initComponents();
        this.setLocationRelativeTo(null);
        this.setKullaniciSicili(kullaniciSicili);
        this.setYonetici_talep(yonetici_ogrenci_talep_sayisi);
    }

    public static void setKullaniciSicili(String newData) {
        kullaniciSicili = newData;
    }

    public static void setYonetici_talep(int newData) {
        yonetici_ogrenci_talep_sayisi = newData;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        dersleri_listele_button = new javax.swing.JButton();
        jScrollPane3 = new javax.swing.JScrollPane();
        ders_listele_table = new javax.swing.JTable();
        secilen_ders_katsayı_ata_button = new javax.swing.JButton();
        text1 = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        puanagoreogrencısıralamalistesitable = new javax.swing.JTable();
        ana_sayfa = new javax.swing.JButton();
        bir_onceki_sayfa = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(153, 255, 255));

        dersleri_listele_button.setText("Dersleri Listele");
        dersleri_listele_button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                dersleri_listele_buttonActionPerformed(evt);
            }
        });

        ders_listele_table.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "Ders Kodu", "Ders Adı", "Ders Kredi"
            }
        ));
        jScrollPane3.setViewportView(ders_listele_table);

        secilen_ders_katsayı_ata_button.setText("Secilen derse atadıgın katsayıları onayla");
        secilen_ders_katsayı_ata_button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                secilen_ders_katsayı_ata_buttonActionPerformed(evt);
            }
        });

        jLabel1.setText("Seçilen ders için katsayı girin ve onaylayın");

        jButton1.setText("Formüle göre Ögrenci sıralamasını getir");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        puanagoreogrencısıralamalistesitable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Ögrenci Sicili", "Ögrenci Adı", "Ögrenci Soyadı", "Ögrenci Puanı"
            }
        ));
        jScrollPane1.setViewportView(puanagoreogrencısıralamalistesitable);

        ana_sayfa.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        ana_sayfa.setText("Ana Sayfa");
        ana_sayfa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ana_sayfaActionPerformed(evt);
            }
        });

        bir_onceki_sayfa.setText("Bir Önceki sayfa");
        bir_onceki_sayfa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bir_onceki_sayfaActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jButton1)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 410, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 228, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(text1, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 406, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(secilen_ders_katsayı_ata_button)
                    .addComponent(dersleri_listele_button)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(ana_sayfa, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(bir_onceki_sayfa)))
                .addContainerGap(470, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(ana_sayfa, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(bir_onceki_sayfa))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(dersleri_listele_button)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 15, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(text1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(secilen_ders_katsayı_ata_button)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jButton1)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 212, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(230, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        String[] stringOgrenciArray = new String[1000];
        int i = 0;
        List<Map.Entry<String, Double>> list = null;
        try {
            // Şifreyi integer olarak parse etme
            Class.forName("org.postgresql.Driver");
            // Veritabanına bağlanma
            Connection connection = DriverManager.getConnection("jdbc:postgresql://localhost:5433/esin", "postgres", "12345");
            String deger = "";
            String[] degerlerArr = null;
            List<String> stringListesi = List.of("AA", "BA", "BB", "CB", "CC", "DC", "DD", "FF");
            List<String> puanListesi = List.of("4", "3.5", "3", "2.5", "2", "1.5", "1", "0");
            for (String anahtar : hashMap.keySet()) {
                deger = hashMap.get(anahtar);

                System.out.println("anahtar:" + anahtar);
                String sql = "SELECT ogrenci.ogrenci_sicil_num as SicilNum, ogrenci.ogrenci_ders_basari_notu as BasarıNotu FROM ogrenci WHERE ogrenci_ders_kodu = ? AND ogrenci_anlasma_durumu = 'B' ";
                PreparedStatement preparedStatement = connection.prepareStatement(sql);
                preparedStatement.setString(1, anahtar);
                ResultSet resultSet = preparedStatement.executeQuery();
                while (resultSet.next()) {
                    System.out.println(resultSet.getString("SicilNum"));
                    stringOgrenciArray[i] = resultSet.getString("SicilNum");
                    for (int j = 0; j < stringListesi.size(); j++) {
                        if (resultSet.getString("BasarıNotu").equals(stringListesi.get(j))) {
                            stringOgrenciArray[i + 1] = (Integer.parseInt(deger) * Double.parseDouble(puanListesi.get(j))) + "";
                        }
                    }

                    i = i + 2;
                }
            }
            // JDBC sürücüsünü yükleme
            String ogrencinin_sicili = "";
            double puanı = 0;

            for (int j = 0; j < stringOgrenciArray.length; j = j + 2) {
                //ogrencinin sicili mi kontrolu
                if (j % 2 == 0 && null != stringOgrenciArray[j]) {
                    //210202086
                    ogrencinin_sicili = stringOgrenciArray[j];
                    for (int k = 0; k < stringOgrenciArray.length; k = k + 2) {
                        if (ogrencinin_sicili.equals(stringOgrenciArray[k])) {
                            puanı = puanı + Double.parseDouble(stringOgrenciArray[k + 1]);
                        }
                    }
                    hashMapOgrenciPuanları.put(ogrencinin_sicili, puanı);
                    puanı = 0;
                }
            }

            for (String anahtar : hashMapOgrenciPuanları.keySet()) {
                double puan = hashMapOgrenciPuanları.get(anahtar);
            }
            list = new ArrayList<>(hashMapOgrenciPuanları.entrySet());
            Collections.sort(list, Map.Entry.comparingByValue());
            Collections.reverse(list);
            for (Map.Entry<String, Double> entry : list) {
                System.out.println("Key: " + entry.getKey() + ", Value: " + entry.getValue());
            }

            try {
                DefaultTableModel model = (DefaultTableModel) puanagoreogrencısıralamalistesitable.getModel();
                model.setRowCount(0);
                for (Map.Entry<String, Double> entry : list) {

                    String sql = "SELECT DISTINCT ogrenci_adi , ogrenci_soyadi FROM ogrenci WHERE ogrenci_anlasma_durumu = 'B' AND ogrenci_sicil_num = ? ";
                    System.out.println("Hello " + entry.getKey());
                    try ( PreparedStatement preparedStatement = connection.prepareStatement(sql)) {
                        preparedStatement.setInt(1, Integer.parseInt(entry.getKey()));
                        // Sorguyu çalıştırma ve sonucu alma
                        ResultSet resultSet = preparedStatement.executeQuery();
                        // Sonuçları kontrol etme
                        while (resultSet.next()) {
                            Object[] o = new Object[4];
                            o[0] = entry.getKey();
                            o[1] = resultSet.getObject("ogrenci_adi");
                            o[2] = resultSet.getObject("ogrenci_soyadi");
                            o[3] = entry.getValue().toString();
                            model.addRow(o);
                        }
                    } catch (SQLException e) {
                        // Hata durumunda burası çalışır
                        e.printStackTrace();
                    }
                }
            } catch (Exception e) {
            }
            // Bağlantıyı kapatma
            connection.close();

        } catch (ClassNotFoundException | SQLException e) {
            System.out.println("Veritabanı hatası: " + e.getMessage());
        }

    }//GEN-LAST:event_jButton1ActionPerformed

    private void secilen_ders_katsayı_ata_buttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_secilen_ders_katsayı_ata_buttonActionPerformed
        // TODO add your handling code here:

        int selectedRow = ders_listele_table.getSelectedRow();
        String dersKodu = "";
        if (selectedRow != -1) {
            // Seçilen satırdan öğrenci sicil numarasını al
            Object dersKoduObject = ders_listele_table.getValueAt(selectedRow, 0);
            dersKodu = dersKoduObject != null ? dersKoduObject.toString() : "";

            // Anahtar-değer çifti ekleme
            hashMap.put(dersKodu, text1.getText());
            JOptionPane.showMessageDialog(null, "Katsayı atandı", "Bilgi", JOptionPane.INFORMATION_MESSAGE);
            text1.setText("");
        } else {
            // Hiçbir satır seçilmediyse kullanıcıya uyarı verebilirsiniz
            System.out.println("Lütfen bir ders seçin.");
            JOptionPane.showMessageDialog(null, "Lütfen bir ders seçin.", "Bilgi", JOptionPane.INFORMATION_MESSAGE);

        }

    }//GEN-LAST:event_secilen_ders_katsayı_ata_buttonActionPerformed

    private void dersleri_listele_buttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_dersleri_listele_buttonActionPerformed
        // TODO add your handling code here:
        try {
            // Şifreyi integer olarak parse etme

            // JDBC sürücüsünü yükleme
            Class.forName("org.postgresql.Driver");

            // Veritabanına bağlanma
            Connection connection = DriverManager.getConnection("jdbc:postgresql://localhost:5433/esin", "postgres", "12345");

            // SQL sorgusu
            try {
                String sql = "SELECT ders_kodu as DersKodu ,ders_adi as DersAdı , ders_kredi as DersKredi  from ders ";
                PreparedStatement preparedStatement = connection.prepareStatement(sql);
                // Sorguyu çalıştırma ve sonucu alma
                ResultSet resultSet = preparedStatement.executeQuery();

                ResultSetMetaData rowdata = (ResultSetMetaData) resultSet.getMetaData();
                int j = 0;
                int i = 0;
                int say = 1;
                int k = rowdata.getColumnCount();
                String[] kolon = new String[k];
                for (j = 0; j < k; j++) {
                    kolon[j] = rowdata.getColumnName(j + 1);
                }
                ders_listele_table.setModel(new javax.swing.table.DefaultTableModel(new Object[][]{}, new String[]{}));
                DefaultTableModel model = (DefaultTableModel) ders_listele_table.getModel();
                model.setColumnIdentifiers(kolon);

                // Sonuçları kontrol etme
                while (resultSet.next()) {
                    Object[] o = new Object[k];
                    for (j = 0; j < k; j++) {
                        o[j] = resultSet.getObject(j + 1);
                    }
                    model.addRow(o);
                    ders_listele_table.setModel(model);
                }
            } catch (SQLException e) {
            }
            // PreparedStatement oluşturma

            // Bağlantıyı kapatma
            connection.close();
        } catch (NumberFormatException e) {
            System.out.println("Geçersiz şifre formatı: " + e.getMessage());
        } catch (ClassNotFoundException | SQLException e) {
            System.out.println("Veritabanı hatası: " + e.getMessage());
        }

    }//GEN-LAST:event_dersleri_listele_buttonActionPerformed

    private void ana_sayfaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ana_sayfaActionPerformed
        String message = "Ana sayfaya yonlendiriliyorsunuz.";
        JOptionPane.showMessageDialog(null, message, "Bilgi Mesajı", JOptionPane.INFORMATION_MESSAGE);

        this.setVisible(false);
        new kullanici_secim_ekrani().setVisible(true);
    }//GEN-LAST:event_ana_sayfaActionPerformed

    private void bir_onceki_sayfaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bir_onceki_sayfaActionPerformed
        String message = "Bir önceki sayfaya yonlendiriliyorsunuz.";
        JOptionPane.showMessageDialog(null, message, "Bilgi Mesajı", JOptionPane.INFORMATION_MESSAGE);

        this.setVisible(false);
        new ogretmen_panel(kullaniciSicili, yonetici_ogrenci_talep_sayisi).setVisible(true);
    }//GEN-LAST:event_bir_onceki_sayfaActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ogretmen_formul_ekrani.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ogretmen_formul_ekrani.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ogretmen_formul_ekrani.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ogretmen_formul_ekrani.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ogretmen_formul_ekrani(kullaniciSicili, yonetici_ogrenci_talep_sayisi).setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton ana_sayfa;
    private javax.swing.JButton bir_onceki_sayfa;
    private javax.swing.JTable ders_listele_table;
    private javax.swing.JButton dersleri_listele_button;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTable puanagoreogrencısıralamalistesitable;
    private javax.swing.JButton secilen_ders_katsayı_ata_button;
    private javax.swing.JTextField text1;
    // End of variables declaration//GEN-END:variables
}
