/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package gui;

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.ResultSetMetaData;
import java.sql.SQLException;
import javax.swing.JComboBox;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import java.sql.Timestamp;
import java.util.Date;

/**
 *
 * @author 90507
 */
public class ogrenci_ders_talep_onay_ekrani extends javax.swing.JFrame {

    private static String kullaniciSicili;
    private static int yonetici_ogrenci_talep_sayisi;

    public ogrenci_ders_talep_onay_ekrani(String kullaniciSicili, int yonetici_ogrenci_talep_sayisi) {
        initComponents();
        this.setLocationRelativeTo(null);
        this.setKullaniciSicili(kullaniciSicili);
    }

    public static void setKullaniciSicili(String newData) {
        kullaniciSicili = newData;
    }

    public static void setYonetici_talep(int newData) {
        yonetici_ogrenci_talep_sayisi = newData;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        ogretmen_talep_ders_getir_buton = new javax.swing.JButton();
        talep_onayla = new javax.swing.JButton();
        jScrollPane3 = new javax.swing.JScrollPane();
        ders_bilgileri_table = new javax.swing.JTable();
        ana_sayfa1 = new javax.swing.JButton();
        bir_onceki_sayfa = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(255, 153, 153));

        ogretmen_talep_ders_getir_buton.setText("Ögretmenler tarafından talep edilen derslerimi gör");
        ogretmen_talep_ders_getir_buton.setToolTipText("");
        ogretmen_talep_ders_getir_buton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ogretmen_talep_ders_getir_butonActionPerformed(evt);
            }
        });

        talep_onayla.setText("Seçilen talebi onayla");
        talep_onayla.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                talep_onaylaActionPerformed(evt);
            }
        });

        ders_bilgileri_table.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "Ders Kodu", "Ders Adı", "Ögretmen Sicili"
            }
        ));
        jScrollPane3.setViewportView(ders_bilgileri_table);

        ana_sayfa1.setText("Ana Sayfa");
        ana_sayfa1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ana_sayfa1ActionPerformed(evt);
            }
        });

        bir_onceki_sayfa.setText("Bir Önceki sayfa");
        bir_onceki_sayfa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bir_onceki_sayfaActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(talep_onayla)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(ogretmen_talep_ders_getir_buton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(ana_sayfa1, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(bir_onceki_sayfa)))
                .addContainerGap(447, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(ana_sayfa1)
                    .addComponent(bir_onceki_sayfa))
                .addGap(22, 22, 22)
                .addComponent(ogretmen_talep_ders_getir_buton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 148, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(talep_onayla)
                .addContainerGap(241, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void ogretmen_talep_ders_getir_butonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ogretmen_talep_ders_getir_butonActionPerformed
        // TODO add your handling code here:
        try {
            // Şifreyi integer olarak parse etme

            // JDBC sürücüsünü yükleme
            Class.forName("org.postgresql.Driver");

            // Veritabanına bağlanma
            Connection connection = DriverManager.getConnection("jdbc:postgresql://localhost:5433/esin", "postgres", "12345");

            String ogrenci_sifresi = "", ogrenci_soyadi = "", ogrenci_adi = "", ogrenci_ilgi_alani = "";
            String sql2 = "SELECT DISTINCT ogrenci_sifresi, ogrenci_soyadi, ogrenci_adi,   ogrenci_ilgi_alani "
                    + "FROM ogrenci "
                    + "WHERE ogrenci_sicil_num  = ? ";
            PreparedStatement preparedStatement2 = connection.prepareStatement(sql2);
            preparedStatement2.setInt(1, Integer.parseInt(kullaniciSicili));
            ResultSet resultSet2 = preparedStatement2.executeQuery();

            if (resultSet2.next()) {
                ogrenci_sifresi = resultSet2.getString("ogrenci_sifresi");
                ogrenci_soyadi = resultSet2.getString("ogrenci_soyadi");
                ogrenci_adi = resultSet2.getString("ogrenci_adi");
                ogrenci_ilgi_alani = resultSet2.getString("ogrenci_ilgi_alani");
            } else {
                System.out.println("Veri bulunamadı.");
            }

            ///kayıt tablosundan gelen ogretmen sicilini al
            Boolean flag = false;
            String kayit_ogrenci_ders_kodu = "", ders_adi = "", kayit_ogretmen_sicil_num = "";
            DefaultTableModel model = (DefaultTableModel) ders_bilgileri_table.getModel();
            model.setRowCount(0);
            String sql = "SELECT kayit_ogrenci_ders_kodu, kayit_ogrenci_sicil_num ,kayit_ogretmen_sicil_num "
                    + "FROM kayit "
                    + "WHERE kayit_ogrenci_sicil_num  = ?";
            PreparedStatement preparedStatement = connection.prepareStatement(sql);
            preparedStatement.setInt(1, Integer.parseInt(kullaniciSicili));
            // Sorguyu çalıştırma ve sonucu alma
            ResultSet resultSet = preparedStatement.executeQuery();
            while (resultSet.next()) {

                kayit_ogrenci_ders_kodu = resultSet.getString("kayit_ogrenci_ders_kodu");
                kayit_ogretmen_sicil_num = resultSet.getString("kayit_ogretmen_sicil_num");

                String sql3 = "SELECT DISTINCT ders_adi "
                        + "FROM ders "
                        + "WHERE ders_kodu  = ?";
                PreparedStatement preparedStatement3 = connection.prepareStatement(sql3);
                preparedStatement3.setString(1, kayit_ogrenci_ders_kodu);
                ResultSet resultSet3 = preparedStatement3.executeQuery();

                if (resultSet3.next()) {
                    ders_adi = resultSet3.getString("ders_adi");

                }

                Object[] o = new Object[3];
                o[0] = kayit_ogrenci_ders_kodu;
                o[1] = ders_adi;
                o[2] = kayit_ogretmen_sicil_num;
                model.addRow(o);

            }

            connection.close();
        } catch (Exception e) {
            System.out.println("Veritabanı hatası: " + e.getMessage());
        }


    }//GEN-LAST:event_ogretmen_talep_ders_getir_butonActionPerformed

    private void talep_onaylaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_talep_onaylaActionPerformed
        // TODO add your handling code here:

        PreparedStatement preparedStatement22 = null;
        ResultSet resultSet = null;

        try {
            Connection connection2 = DriverManager.getConnection("jdbc:postgresql://localhost:5433/esin", "postgres", "12345");

            // JDBC sürücüsünü yükleme
            Class.forName("org.postgresql.Driver");

            // Veritabanına bağlanma
            connection2 = DriverManager.getConnection("jdbc:postgresql://localhost:5433/esin", "postgres", "12345");

            String sql22 = "SELECT sisteme_bas_tarih, sisteme_bit_tarih FROM yonetici";
            preparedStatement22 = connection2.prepareStatement(sql22);
            resultSet = preparedStatement22.executeQuery();
            if (resultSet.next()) {

                Timestamp sistemeBasTarih = resultSet.getTimestamp("sisteme_bas_tarih");
                Timestamp sistemeBitTarih = resultSet.getTimestamp("sisteme_bit_tarih");
                System.out.println(sistemeBasTarih);
                // Şu anki tarih/saat bilgisini al
                Timestamp now = new Timestamp(System.currentTimeMillis());

                // Tarih/saat karşılaştırması yap
                if (sistemeBasTarih.after(now)) {
                    System.out.println("Sisteme başlama tarihi ileride bir zamanı gösteriyor.");
                    JOptionPane.showMessageDialog(null, "Sisteme başlama tarihi ileride bir zamanı gösteriyor. Sisteme başlama tarihi : " + sistemeBasTarih, "Bilgi", JOptionPane.INFORMATION_MESSAGE);

                } else if (sistemeBitTarih.before(now)) {
                    System.out.println("Sisteme bitiş tarihi geçmiş bir zamanı gösteriyor.");
                    JOptionPane.showMessageDialog(null, "Sisteme bitiş tarihi geçmiş bir zamanı gösteriyor. Sistemin bitiş tarihi : " + sistemeBitTarih, "Bilgi", JOptionPane.INFORMATION_MESSAGE);

                } else {
                    System.out.println("Sistem şu an aktif durumda.");

                    try {
                        Class.forName("org.postgresql.Driver");

                        int selectedRow = ders_bilgileri_table.getSelectedRow();
                        String dersKodu = "", ögretmenSicili = "";
                        if (selectedRow != -1) {
                            // Seçilen satırdan öğrenci sicil numarasını al
                            Object dersKoduObject = ders_bilgileri_table.getValueAt(selectedRow, 0);
                            dersKodu = dersKoduObject != null ? dersKoduObject.toString() : "";

                            Object ögretmenSiciliObject = ders_bilgileri_table.getValueAt(selectedRow, 2);
                            ögretmenSicili = ögretmenSiciliObject != null ? ögretmenSiciliObject.toString() : "";

                            // Veritabanına bağlanma
                            Connection connection = DriverManager.getConnection("jdbc:postgresql://localhost:5433/esin", "postgres", "12345");

                            String ogrenci_sifresi = "", ogrenci_soyadi = "", ogrenci_adi = "", ogrenci_ilgi_alani = "", ogrenci_agno = "";
                            String sql2 = "SELECT DISTINCT ogrenci_sifresi, ogrenci_soyadi, ogrenci_adi,   ogrenci_ilgi_alani , ogrenci_agno "
                                    + "FROM ogrenci "
                                    + "WHERE ogrenci_sicil_num  = ?";
                            PreparedStatement preparedStatement2 = connection.prepareStatement(sql2);
                            preparedStatement2.setInt(1, Integer.parseInt(kullaniciSicili));
                            ResultSet resultSet2 = preparedStatement2.executeQuery();

                            if (resultSet2.next()) {
                                ogrenci_sifresi = resultSet2.getString("ogrenci_sifresi");
                                ogrenci_soyadi = resultSet2.getString("ogrenci_soyadi");
                                ogrenci_adi = resultSet2.getString("ogrenci_adi");
                                ogrenci_ilgi_alani = resultSet2.getString("ogrenci_ilgi_alani");
                                ogrenci_agno = resultSet2.getString("ogrenci_agno");
                            } else {
                                System.out.println("Veri bulunamadı." + ogrenci_soyadi);
                            }
                            //ogretmen sicilini ata
                            System.out.println("***********" + ogrenci_sifresi + "***********" + ogrenci_soyadi + ogrenci_adi + ogrenci_ilgi_alani + ogrenci_agno);
                            String sql = "INSERT INTO ogrenci(ogrenci_sifresi, ogrenci_soyadi, ogrenci_adi,  ogrenci_anlasma_durumu, ogrenci_anlasma_talep_sayisi, ogrenci_ilgi_alani, ogrenci_agno, ogrenci_ders_kodu, ogrenci_sicil_num ,ogrenci_ogretmen_sicil_num)VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?)";
                            PreparedStatement preparedStatement = connection.prepareStatement(sql);
                            preparedStatement.setInt(1, Integer.parseInt(ogrenci_sifresi));
                            preparedStatement.setString(2, ogrenci_soyadi);
                            preparedStatement.setString(3, ogrenci_adi);
                            preparedStatement.setString(4, "B");
                            preparedStatement.setInt(5, 1);
                            preparedStatement.setString(6, ogrenci_ilgi_alani);
                            preparedStatement.setDouble(7, Double.parseDouble(ogrenci_agno));
                            preparedStatement.setString(8, dersKodu);
                            preparedStatement.setInt(9, Integer.parseInt(kullaniciSicili));
                            preparedStatement.setInt(10, Integer.parseInt(ögretmenSicili));
                            preparedStatement.executeUpdate();

                            /// ogretmene tablosu update konten-ntajanı bır azaltıp guncelle
                            String deleteOgrSQL = "DELETE FROM kayit WHERE kayit_ogrenci_sicil_num = ? and kayit_ogrenci_ders_kodu = ? and kayit_ogretmen_sicil_num = ? ";
                            PreparedStatement preparedStatement37 = connection.prepareStatement(deleteOgrSQL);
                            preparedStatement37.setInt(1, Integer.parseInt(kullaniciSicili));
                            preparedStatement37.setString(2, dersKodu);
                            preparedStatement37.setInt(3, Integer.parseInt(ögretmenSicili));
                            preparedStatement37.executeUpdate();

                            Date sistemTarihi = new Date();
                            java.sql.Date sqlTarih = new java.sql.Date(sistemTarihi.getTime());

                            String sql11 = "INSERT INTO kayit_gecmisi (ogrenci_sicil_no,  ders_kodu, islem_tarihi, islem_durumu, ogretmen_sicil_no) VALUES (?, ?, ?, ?, ?)";
                            PreparedStatement preparedStatement11 = connection2.prepareStatement(sql11);
                            preparedStatement11.setInt(1, Integer.parseInt(kullaniciSicili));
                            preparedStatement11.setString(2, dersKodu);
                            preparedStatement11.setDate(3, sqlTarih);
                            preparedStatement11.setString(4, "Ögrenci ders talebi onayladı");
                            preparedStatement11.setInt(5, Integer.parseInt(ögretmenSicili));
                            preparedStatement11.executeUpdate();

                            String sql9 = "select ogretmen_kontenjan_bilgisi from ogretmen where ogretmen_ders_kodu = ? ";
                            PreparedStatement preparedStatement9 = connection.prepareStatement(sql9);
                            preparedStatement9.setString(1, dersKodu);
                            ResultSet resultSet9 = preparedStatement9.executeQuery();
                            int ogretmen_kontenjan_bilgisi = 0;
                            if (resultSet9.next()) {
                                ogretmen_kontenjan_bilgisi = resultSet9.getInt("ogretmen_kontenjan_bilgisi");
                            } else {
                                System.out.println("Veri bulunamadı." + ogrenci_soyadi);
                            }
                            ogretmen_kontenjan_bilgisi = ogretmen_kontenjan_bilgisi - 1;
                            //ogretmen tablosunda kontenjanı update
                            System.out.println("ogretmen_kontenjan_bilgisi"+ogretmen_kontenjan_bilgisi);
                            System.out.println("ögretmenSicili"+ögretmenSicili);
                            System.out.println("dersKodu"+dersKodu);
                            String sql7 = " UPDATE ogretmen SET  ogretmen_kontenjan_bilgisi = ? WHERE ogretmen_sicil_no = ?  and ogretmen_ders_kodu = ? ";
                            PreparedStatement preparedStatement7 = connection.prepareStatement(sql7);
                            preparedStatement7.setInt(1, ogretmen_kontenjan_bilgisi);
                            preparedStatement7.setInt(2, Integer.parseInt(ögretmenSicili));
                            preparedStatement7.setString(3, dersKodu);
                            preparedStatement7.executeUpdate();
                            connection.close();
                            JOptionPane.showMessageDialog(null, "Talep onaylandı", "Bilgi", JOptionPane.INFORMATION_MESSAGE);

                        } else {
                            // Hiçbir satır seçilmediyse kullanıcıya uyarı verebilirsiniz
                            System.out.println("Lütfen bir ders seçin.");
                        }

                    } catch (Exception e) {
                        JOptionPane.showMessageDialog(null, "Hata oluştu.", "Bilgi", JOptionPane.INFORMATION_MESSAGE);

                    }

                }
            } else {
                System.out.println("Belirtilen şartlara uyan kayıt bulunamadı.");
                JOptionPane.showMessageDialog(null, "Belirtilen şartlara uyan kayıt bulunamadı.", "Bilgi", JOptionPane.INFORMATION_MESSAGE);

            }

        } catch (ClassNotFoundException | SQLException e) {
            e.printStackTrace();
        }

        this.setVisible(false);
        new ogrenci_panel(kullaniciSicili, yonetici_ogrenci_talep_sayisi).setVisible(true);
    }//GEN-LAST:event_talep_onaylaActionPerformed

    private void ana_sayfa1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ana_sayfa1ActionPerformed
        String message = "Ana sayfaya yonlendiriliyorsunuz.";
        JOptionPane.showMessageDialog(null, message, "Bilgi Mesajı", JOptionPane.INFORMATION_MESSAGE);

        this.setVisible(false);
        new kullanici_secim_ekrani().setVisible(true);
    }//GEN-LAST:event_ana_sayfa1ActionPerformed

    private void bir_onceki_sayfaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bir_onceki_sayfaActionPerformed
        String message = "Bir önceki sayfaya yonlendiriliyorsunuz.";
        JOptionPane.showMessageDialog(null, message, "Bilgi Mesajı", JOptionPane.INFORMATION_MESSAGE);

        this.setVisible(false);
        new ogrenci_panel(kullaniciSicili, yonetici_ogrenci_talep_sayisi).setVisible(true);
    }//GEN-LAST:event_bir_onceki_sayfaActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;

                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ogrenci_ders_talep_onay_ekrani.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);

        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ogrenci_ders_talep_onay_ekrani.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);

        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ogrenci_ders_talep_onay_ekrani.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);

        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ogrenci_ders_talep_onay_ekrani.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ogrenci_ders_talep_onay_ekrani(kullaniciSicili, yonetici_ogrenci_talep_sayisi).setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton ana_sayfa1;
    private javax.swing.JButton bir_onceki_sayfa;
    private javax.swing.JTable ders_bilgileri_table;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JButton ogretmen_talep_ders_getir_buton;
    private javax.swing.JButton talep_onayla;
    // End of variables declaration//GEN-END:variables
}
